<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Workreport-Mapper">

	<sql id="search">
		<if test="searchType == 'tcw'.toString() ">
			and workreport_title || workreport_content like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 't'.toString() ">
			and workreport_title like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString() ">
			and workreport_content like '%'||#{keyword}||'%'
		</if>
		<if test="member_id != null and memberStatus == 1">
			and workreport_setter = #{member_id}
		</if>
		<if test="member_id != null and memberStatus == 2">
			and workreport_getter = #{member_id}
		</if>

		<if test="type != null and type != 0">
			and workreport_check = #{type}
		</if>
	</sql>

	<select id="selectSearchWorkreportList" resultType="workreport">
		select
		*
		from workreport
		where workreport_number is not null
		<include refid="search" />
		order by workreport_regdate desc
	</select>

	<select id="selectSearchWorkreportListCount" resultType="int">
		select count(*)
		from workreport
		where workreport_number is not null
		<include refid="search" />
	</select>

	<select id="selectWorkreportByWorkreport_Number" resultType="workreport">
		select
		*
		from
		workreport
		where workreport_number=#{workreport_number}
	</select>

	<update id="insertWorkreport" parameterType="workreport">
		insert into
		workreport(workreport_number, workreport_project_number,workreport_setter, workreport_check,
		workreport_regdate, workreport_getter,workreport_title,workreport_memstatus,workreport_content)
		values(#{workreport_number},#{workreport_project_number},#{workreport_setter},#{workreport_check},sysdate,#{workreport_getter},#{workreport_title},#{workreport_memstatus},#{workreport_content})
	</update>

	<update id="updateWorkreport" parameterType="workreport">
		update workreport
		set
		workreport_project_number=#{workreport_project_number},workreport_check=#{workreport_check},workreport_getter=#{workreport_getter},workreport_title=#{workreport_title},workreport_content=#{workreport_content}
		where workreport_number=#{workreport_number}
	</update>

	<update id="deleteWorkreport">
		delete
		from workreport
		where workreport_number=#{workreport_number}
	</update>
	
	<!-- <select id="selectSearchWorkreportListCount" resultType="int">
		select count(*)
		from issue
		where workreport_number is not null
		<include refid="search" />
	</select> -->
	
	<select id="selectWorkreportSeqNext" resultType="int">
		select workreport_seq.nextval as workreport_number from dual
	</select>
</mapper>  





